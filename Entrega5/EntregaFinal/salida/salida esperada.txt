;class Main inherits IO {
;    
;    size : Int <- 38;
;    flag : Bool;
;    message : String;
;    truth : Bool <- true;
;
;    main() : Object {
;        {
;            out_string("Tamanio :");
;            out_int(size);
;        }
;    };
;};


@true = global i1 1
@false = global i1 0
@zero = global i32 0
@size = global i32 38
@flag = global i1 0
@message_c = constant [0 x i8] c""
@message = global i8* bitcast([0 x i8]* @message_c to i8*)
@truth = global i1 1
@vars_0_c = constant [9 x i8] c"Tamanio :"
@vars_0 = global i8* bitcast([9 x i8]* @vars_0_c to i8*)

%Object = type { i8* }
%IO = type { i8* }

@.type.Main = private constant [4 x i8] c"Main"

%Main= type {
    i8*,
    i32,
    i1,
    i8*,
    i1
};

define %Main* @newMain() {
    %vptr = call i8* @malloc( i64 ptrtoint (%Main* getelementptr (%Main* null, i32 1) to i64) )
    %ptr = bitcast i8* %vptr to %Main* 
    %typePtr = getelementptr %Main* %ptr, i32 0, i32 0
    store i8* bitcast( [4 x i8]* @.type.Main to i8*), i8** %typePtr
    ;
    ; inicializadios de los los fields del objeto reciÃ©n creado
    %lvari_1 = getelementptr %Main* %ptr, i32 0, i32 1
    store i32 38, i32* %lvari_1
    %lvarb_1 = getelementptr %Main* %ptr, i32 0, i32 4
    store i1 true, i1* %lvarb_1

    ret %Main* %ptr
}


define %Main* @Main_main(%Main* %m) {
    %_tmp_1 = bitcast %Main* %m to %IO*
    %lvars_1 = load i8** @vars_0
    call %IO* @IO_out_string(%IO* null, i8* %lvars_1)
    %lvari_2 = getelementptr inbounds %Main* %m, i32 0, i32 1
    %lvari_3 = load i32* %lvari_2
    call %IO* @IO_out_int(%IO* null, i32 %lvari_3)
    ret %Main* %m
}


define i32 @main() {
    %ptr = call %Main* @newMain();
    call %Main* @Main_main(%Main* %ptr)
    ret i32 0
}

declare %Object* @Object_abort(%Object*)
declare i8* @Object_type_name(%Object*)
declare %IO* @IO_out_string(%IO*, i8*)
declare %IO* @IO_out_int(%IO*, i32 )
declare i8* @IO_in_string(%IO*)
declare i32 @IO_in_int(%IO*)
declare i32 @String_length(i8*)
declare i8* @String_concat(i8*, i8*)
declare i8* @String_substr(i8*, i32, i32 )
declare i32 @strcmp(i8*, i8*)
declare i8* @malloc(i64)
